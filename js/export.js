function downloadPDF() {
  showLoading();
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();
  const employeeName = document.getElementById("employeeName").value || "Unknown";
  const employeeRole = document.getElementById("employeeRole").value || "Employee";
  const rows = document.querySelectorAll("#timeSheet tbody tr");
  const weekStr = getWeekStr(rows);

  doc.setFontSize(22);
  doc.setFont("helvetica", "bold");
  doc.text("Enzo Dialer Time Sheet", 20, 20);
  doc.setFontSize(14);
  doc.setFont("helvetica", "normal");
  doc.text(`Employee: ${employeeName}`, 20, 30);
  doc.text(`Role: ${employeeRole}`, 20, 40);
  doc.text(`Payslip for ${weekStr}`, 20, 50);
  doc.setLineWidth(0.5);
  doc.line(20, 55, 190, 55);

  let y = 70;
  doc.setFontSize(12);
  doc.setFont("helvetica", "bold");
  doc.text("Date", 20, y);
  doc.text("Day Off", 50, y);
  doc.text("Work Hrs", 80, y);
  doc.text("Break Hrs", 110, y);
  doc.text("Total Hrs", 140, y);
  doc.text("Amount", 170, y);
  y += 10;
  doc.setFont("helvetica", "normal");

  rows.forEach(row => {
    let date = row.cells[0].querySelector("input").value || 'N/A';
    let isDayOff = row.cells[1].querySelector("input").checked ? 'Yes' : 'No';
    let work = row.cells[2].querySelector("input").value || '0';
    let brk = row.cells[3].querySelector("input").value || '0';
    let total = row.querySelector(".totalHours").innerText;
    let amount = row.querySelector(".amount").innerText;
    
    doc.text(date, 20, y);
    doc.text(isDayOff, 50, y);
    doc.text(work, 80, y);
    doc.text(brk, 110, y);
    doc.text(total, 140, y);
    doc.text(amount, 170, y);
    y += 10;
  });

  y += 10;
  doc.setFontSize(16);
  doc.setFont("helvetica", "bold");
  doc.text(`Grand Total: $${document.getElementById("totalValue").innerText}`, 20, y);
  doc.setFontSize(10);
  doc.setFont("helvetica", "normal");
  doc.text("Enzo Dialer | support@enzodialer.com | Generated by Enzo Dialer Time Sheet", 20, 280);

  doc.save(`${employeeName}_timesheet_${new Date().toISOString().split('T')[0]}.pdf`);
  hideLoading();
  showToast('PDF exported successfully!');
}

function generatePDFBase64() {
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();
  const employeeName = document.getElementById("employeeName").value || "Unknown";
  const employeeRole = document.getElementById("employeeRole").value || "Employee";
  const rows = document.querySelectorAll("#timeSheet tbody tr");
  const weekStr = getWeekStr(rows);

  doc.setFontSize(22);
  doc.setFont("helvetica", "bold");
  doc.text("Enzo Dialer Time Sheet", 20, 20);
  doc.setFontSize(14);
  doc.setFont("helvetica", "normal");
  doc.text(`Employee: ${employeeName}`, 20, 30);
  doc.text(`Role: ${employeeRole}`, 20, 40);
  doc.text(`Payslip for ${weekStr}`, 20, 50);
  doc.setLineWidth(0.5);
  doc.line(20, 55, 190, 55);

  let y = 70;
  doc.setFontSize(12);
  doc.setFont("helvetica", "bold");
  doc.text("Date", 20, y);
  doc.text("Day Off", 50, y);
  doc.text("Work Hrs", 80, y);
  doc.text("Break Hrs", 110, y);
  doc.text("Total Hrs", 140, y);
  doc.text("Amount", 170, y);
  y += 10;
  doc.setFont("helvetica", "normal");

  rows.forEach(row => {
    let date = row.cells[0].querySelector("input").value || 'N/A';
    let isDayOff = row.cells[1].querySelector("input").checked ? 'Yes' : 'No';
    let work = row.cells[2].querySelector("input").value || '0';
    let brk = row.cells[3].querySelector("input").value || '0';
    let total = row.querySelector(".totalHours").innerText;
    let amount = row.querySelector(".amount").innerText;
    
    doc.text(date, 20, y);
    doc.text(isDayOff, 50, y);
    doc.text(work, 80, y);
    doc.text(brk, 110, y);
    doc.text(total, 140, y);
    doc.text(amount, 170, y);
    y += 10;
  });

  y += 10;
  doc.setFontSize(16);
  doc.setFont("helvetica", "bold");
  doc.text(`Grand Total: $${document.getElementById("totalValue").innerText}`, 20, y);
  doc.setFontSize(10);
  doc.setFont("helvetica", "normal");
  doc.text("Enzo Dialer | support@enzodialer.com | Generated by Enzo Dialer Time Sheet", 20, 280);

  return doc.output('datauristring').split(',')[1];
}

function downloadCSV() {
  showLoading();
  const employeeName = document.getElementById("employeeName").value || "Unknown";
  let csvContent = "data:text/csv;charset=utf-8,";

  csvContent += "Employee,Date,Day Off,Working Hours,Break Hours,Total Hours,Amount\n";

  document.querySelectorAll("#timeSheet tbody tr").forEach(row => {
    let date = row.cells[0].querySelector("input").value || '';
    let isDayOff = row.cells[1].querySelector("input").checked ? 'Yes' : 'No';
    let work = row.cells[2].querySelector("input").value || '0';
    let brk = row.cells[3].querySelector("input").value || '0';
    let total = row.querySelector(".totalHours").innerText;
    let amt = row.querySelector(".amount").innerText.replace('$', '');
    
    csvContent += `"${employeeName}","${date}","${isDayOff}","${work}","${brk}","${total}","${amt}"\n`;
  });

  csvContent += `"","","","","","Grand Total:","${document.getElementById("totalValue").innerText}"\n`;

  const encodedUri = encodeURI(csvContent);
  const link = document.createElement("a");
  link.setAttribute("href", encodedUri);
  link.setAttribute("download", `${employeeName}_timesheet_${new Date().toISOString().split('T')[0]}.csv`);
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);

  hideLoading();
  showToast('CSV exported successfully!');
}

function downloadXLSX() {
  showLoading();
  const employeeName = document.getElementById("employeeName").value || "Unknown";
  let wb = XLSX.utils.book_new();
  let ws_data = [["Employee", "Date", "Day Off", "Working Hours", "Break Hours", "Total Hours", "Amount"]];

  document.querySelectorAll("#timeSheet tbody tr").forEach(row => {
    let date = row.cells[0].querySelector("input").value || '';
    let isDayOff = row.cells[1].querySelector("input").checked ? 'Yes' : 'No';
    let work = row.cells[2].querySelector("input").value || '0';
    let brk = row.cells[3].querySelector("input").value || '0';
    let total = row.querySelector(".totalHours").innerText;
    let amt = row.querySelector(".amount").innerText.replace('$', '');
    ws_data.push([employeeName, date, isDayOff, work, brk, total, amt]);
  });

  ws_data.push(['', '', '', '', '', 'Grand Total:', document.getElementById("totalValue").innerText]);

  let ws = XLSX.utils.aoa_to_sheet(ws_data);
  XLSX.utils.book_append_sheet(wb, ws, "Timesheet");
  XLSX.writeFile(wb, `${employeeName}_timesheet_${new Date().toISOString().split('T')[0]}.xlsx`);
  hideLoading();
  showToast('XLSX exported successfully!');
}

function emailData() {
  showLoading();
  const employeeName = document.getElementById("employeeName").value || "Unknown";
  const weekStr = getWeekStr(document.querySelectorAll("#timeSheet tbody tr"));
  const pdfBase64 = generatePDFBase64();
  const filename = `${employeeName}_timesheet_${new Date().toISOString().split('T')[0]}.pdf`;
  const subject = `${employeeName} Timesheet ${new Date().toISOString().split('T')[0]}`;
  const body = `Attached is the timesheet for ${employeeName} for ${weekStr}.\n\nPlease manually attach the PDF if it does not appear in your email client.\n\nGenerated by Enzo Dialer Time Sheet`;

  const tempLink = document.createElement("a");
  tempLink.href = `data:application/pdf;base64,${pdfBase64}`;
  tempLink.download = filename;
  document.body.appendChild(tempLink);
  tempLink.click();
  document.body.removeChild(tempLink);

  window.location.href = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}&attachment=data:application/pdf;base64,${pdfBase64};${encodeURIComponent(filename)}`;

  hideLoading();
  showToast('Email client opened! PDF downloaded as fallback.');
}

function exportJSON() {
  showLoading();
  if (!currentUser) {
    hideLoading();
    showToast('Please login to export data.');
    return;
  }
  const data = users[currentUser].data;
  const blob = new Blob([JSON.stringify(data, null, 2)], {type: 'application/json'});
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = `${currentUser}_timesheet.json`;
  a.click();
  URL.revokeObjectURL(url);
  hideLoading();
  showToast('JSON exported successfully!');
}

function importJSON(file) {
  showLoading();
  if (!currentUser) {
    hideLoading();
    showToast('Please login to import data.');
    return;
  }
  const reader = new FileReader();
  reader.onload = function(e) {
    try {
      const importedData = JSON.parse(e.target.result);
      users[currentUser].data = importedData;
      saveUsers();
      loadUserData();
      hideLoading();
      showToast('JSON imported successfully!');
    } catch (err) {
      hideLoading();
      showToast('Invalid JSON file.');
    }
  };
  reader.readAsText(file);
}